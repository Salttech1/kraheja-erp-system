package kraheja.enggsys.certificatesystem.dataentry.mappers;import java.util.List;import java.util.Objects;import java.util.function.Function;import java.util.stream.Collectors;import kraheja.commons.utils.CommonConstraints;import kraheja.enggsys.bean.response.CbilldResponseBean;import kraheja.enggsys.entity.Cbilld;public interface CbilldMapper {	public static Function<List<Cbilld>, List<CbilldResponseBean>> fetchCbilldEntityPojoMapper = cbilldEntityList -> {		return cbilldEntityList.stream().map(cbilldEntity -> {			return CbilldResponseBean.builder()
					.ser(cbilldEntity.getCbilldCK().getCbldSer())					.lineno(cbilldEntity.getCbilldCK().getCbldLineno())					.amount(cbilldEntity.getCbldAmount())					.certdate(Objects.nonNull(cbilldEntity.getCbldCertdate()) ? cbilldEntity.getCbldCertdate().format(CommonConstraints.INSTANCE.DDMMYYYY_FORMATTER): null)					.certnum(cbilldEntity.getCbldCertnum())					.cgstamt(cbilldEntity.getCbldCgstamt())					.cgstperc(cbilldEntity.getCbldCgstperc())					.dbamt(cbilldEntity.getCbldDbamt())					.dbqty(cbilldEntity.getCbldDbqty())					.discountamt(cbilldEntity.getCbldDiscountamt())					.igstamt(cbilldEntity.getCbldIgstamt())					.igstperc(cbilldEntity.getCbldIgstperc())					.lotno(cbilldEntity.getCbldLotno())					.origsite(cbilldEntity.getCbldOrigsite())					.quantity(cbilldEntity.getCbldQuantity())					.rate(cbilldEntity.getCbldRate())					.saccode(cbilldEntity.getCbldSaccode())					.sacdesc(cbilldEntity.getCbldSacdesc())					.sgstamt(cbilldEntity.getCbldSgstamt())					.sgstperc(cbilldEntity.getCbldSgstperc())					.site(cbilldEntity.getCbldSite())					.taxableamt(cbilldEntity.getCbldTaxableamt())					.today(cbilldEntity.getCbldToday())					.ugstamt(cbilldEntity.getCbldUgstamt())					.ugstperc(cbilldEntity.getCbldUgstperc())					.uom(cbilldEntity.getCbldUom())					.userid(cbilldEntity.getCbldUserid())					.workorderlineno(cbilldEntity.getCbldWorkorderlineno())					.workorderno(cbilldEntity.getCbldWorkorderno())					.build(); 		}).collect(Collectors.toList());	};	//	public static Function<List<CbilldRequestBean>, List <Cbilld>> addCbilldPojoEntityMapper = (cbilldRequestBeanList) -> { 	//return cbilldRequestBeanList.stream().map(cbilldRequestBean -> {	//return Cbilld.builder().cbilldCK(CbilldCK.builder()	//					.cbldSer(cbilldRequestBean.getSer())	//					.cbldLineno(Objects.nonNull(cbilldRequestBean.getLineno()) ? cbilldRequestBean.getLineno() : BigInteger.ZERO.intValue())	//		.build())	//
	//					.cbldAmount(Objects.nonNull(cbilldRequestBean.getAmount()) ? cbilldRequestBean.getAmount() : BigInteger.ZERO.doubleValue())	//					.cbldCertdate(Objects.nonNull(cbilldRequestBean.getCertdate()) ? LocalDate.parse(cbilldRequestBean.getCertdate(), CommonConstraints.INSTANCE.DDMMYYYY_FORMATTER): null)	//					.cbldCertnum(cbilldRequestBean.getCertnum())	//					.cbldCgstamt(Objects.nonNull(cbilldRequestBean.getCgstamt()) ? cbilldRequestBean.getCgstamt() : BigInteger.ZERO.doubleValue())	//					.cbldCgstperc(Objects.nonNull(cbilldRequestBean.getCgstperc()) ? cbilldRequestBean.getCgstperc() : BigInteger.ZERO.doubleValue())	//					.cbldDbamt(Objects.nonNull(cbilldRequestBean.getDbamt()) ? cbilldRequestBean.getDbamt() : BigInteger.ZERO.doubleValue())	//					.cbldDbqty(Objects.nonNull(cbilldRequestBean.getDbqty()) ? cbilldRequestBean.getDbqty() : BigInteger.ZERO.doubleValue())	//					.cbldDiscountamt(Objects.nonNull(cbilldRequestBean.getDiscountamt()) ? cbilldRequestBean.getDiscountamt() : BigInteger.ZERO.doubleValue())	//					.cbldIgstamt(Objects.nonNull(cbilldRequestBean.getIgstamt()) ? cbilldRequestBean.getIgstamt() : BigInteger.ZERO.doubleValue())	//					.cbldIgstperc(Objects.nonNull(cbilldRequestBean.getIgstperc()) ? cbilldRequestBean.getIgstperc() : BigInteger.ZERO.doubleValue())	//					.cbldLotno(cbilldRequestBean.getLotno())	//					.cbldOrigsite(GenericAuditContextHolder.getContext().getSite())	//					.cbldQuantity(Objects.nonNull(cbilldRequestBean.getQuantity()) ? cbilldRequestBean.getQuantity() : BigInteger.ZERO.doubleValue())	//					.cbldRate(Objects.nonNull(cbilldRequestBean.getRate()) ? cbilldRequestBean.getRate() : BigInteger.ZERO.doubleValue())	//					.cbldSaccode(cbilldRequestBean.getSaccode())	//					.cbldSacdesc(cbilldRequestBean.getSacdesc())	//					.cbldSgstamt(Objects.nonNull(cbilldRequestBean.getSgstamt()) ? cbilldRequestBean.getSgstamt() : BigInteger.ZERO.doubleValue())	//					.cbldSgstperc(Objects.nonNull(cbilldRequestBean.getSgstperc()) ? cbilldRequestBean.getSgstperc() : BigInteger.ZERO.doubleValue())	//					.cbldSite(GenericAuditContextHolder.getContext().getSite())	//					.cbldTaxableamt(Objects.nonNull(cbilldRequestBean.getTaxableamt()) ? cbilldRequestBean.getTaxableamt() : BigInteger.ZERO.doubleValue())	//					.cbldToday(LocalDateTime.now())	//					.cbldUgstamt(Objects.nonNull(cbilldRequestBean.getUgstamt()) ? cbilldRequestBean.getUgstamt() : BigInteger.ZERO.doubleValue())	//					.cbldUgstperc(Objects.nonNull(cbilldRequestBean.getUgstperc()) ? cbilldRequestBean.getUgstperc() : BigInteger.ZERO.doubleValue())	//					.cbldUom(cbilldRequestBean.getUom())	//					.cbldUserid(GenericAuditContextHolder.getContext().getUserid())	//					.cbldWorkorderlineno(Objects.nonNull(cbilldRequestBean.getWorkorderlineno()) ? cbilldRequestBean.getWorkorderlineno() : BigInteger.ZERO.intValue())	//					.cbldWorkorderno(cbilldRequestBean.getWorkorderno())	//			//.build();	//}).collect(Collectors.toList());	//} ;	//
	//	public static BiFunction<Cbilld, CbilldRequestBean, Cbilld> updateCbilldEntityPojoMapper = (cbilldEntity, cbilldRequestBean) -> {	//		cbilldEntity.getCbilldCK().setCbldSer(Objects.nonNull(cbilldRequestBean.getSer()) ? cbilldRequestBean.getSer().trim() : cbilldEntity.getCbilldCK().getCbldSer());	//		cbilldEntity.getCbilldCK().setCbldLineno(Objects.nonNull(cbilldRequestBean.getLineno()) ? cbilldRequestBean.getLineno() : cbilldEntity.getCbilldCK().getCbldLineno());	//
	//		cbilldEntity.setCbldAmount(Objects.nonNull(cbilldRequestBean.getAmount()) ? cbilldRequestBean.getAmount() : cbilldEntity.getCbldAmount());	//		cbilldEntity.setCbldCertdate(Objects.nonNull(cbilldRequestBean.getCertdate()) ? LocalDate.parse(cbilldRequestBean.getCertdate(), CommonConstraints.INSTANCE.DDMMYYYY_FORMATTER) : cbilldEntity.getCbldCertdate());	//		cbilldEntity.setCbldCertnum(Objects.nonNull(cbilldRequestBean.getCertnum()) ? cbilldRequestBean.getCertnum().trim() : cbilldEntity.getCbldCertnum());	//		cbilldEntity.setCbldCgstamt(Objects.nonNull(cbilldRequestBean.getCgstamt()) ? cbilldRequestBean.getCgstamt() : cbilldEntity.getCbldCgstamt());	//		cbilldEntity.setCbldCgstperc(Objects.nonNull(cbilldRequestBean.getCgstperc()) ? cbilldRequestBean.getCgstperc() : cbilldEntity.getCbldCgstperc());	//		cbilldEntity.setCbldDbamt(Objects.nonNull(cbilldRequestBean.getDbamt()) ? cbilldRequestBean.getDbamt() : cbilldEntity.getCbldDbamt());	//		cbilldEntity.setCbldDbqty(Objects.nonNull(cbilldRequestBean.getDbqty()) ? cbilldRequestBean.getDbqty() : cbilldEntity.getCbldDbqty());	//		cbilldEntity.setCbldDiscountamt(Objects.nonNull(cbilldRequestBean.getDiscountamt()) ? cbilldRequestBean.getDiscountamt() : cbilldEntity.getCbldDiscountamt());	//		cbilldEntity.setCbldIgstamt(Objects.nonNull(cbilldRequestBean.getIgstamt()) ? cbilldRequestBean.getIgstamt() : cbilldEntity.getCbldIgstamt());	//		cbilldEntity.setCbldIgstperc(Objects.nonNull(cbilldRequestBean.getIgstperc()) ? cbilldRequestBean.getIgstperc() : cbilldEntity.getCbldIgstperc());	//		cbilldEntity.setCbldLotno(Objects.nonNull(cbilldRequestBean.getLotno()) ? cbilldRequestBean.getLotno().trim() : cbilldEntity.getCbldLotno());	//		cbilldEntity.setCbldOrigsite(GenericAuditContextHolder.getContext().getSite()) ; 	//		cbilldEntity.setCbldQuantity(Objects.nonNull(cbilldRequestBean.getQuantity()) ? cbilldRequestBean.getQuantity() : cbilldEntity.getCbldQuantity());	//		cbilldEntity.setCbldRate(Objects.nonNull(cbilldRequestBean.getRate()) ? cbilldRequestBean.getRate() : cbilldEntity.getCbldRate());	//		cbilldEntity.setCbldSaccode(Objects.nonNull(cbilldRequestBean.getSaccode()) ? cbilldRequestBean.getSaccode().trim() : cbilldEntity.getCbldSaccode());	//		cbilldEntity.setCbldSacdesc(Objects.nonNull(cbilldRequestBean.getSacdesc()) ? cbilldRequestBean.getSacdesc().trim() : cbilldEntity.getCbldSacdesc());	//		cbilldEntity.setCbldSgstamt(Objects.nonNull(cbilldRequestBean.getSgstamt()) ? cbilldRequestBean.getSgstamt() : cbilldEntity.getCbldSgstamt());	//		cbilldEntity.setCbldSgstperc(Objects.nonNull(cbilldRequestBean.getSgstperc()) ? cbilldRequestBean.getSgstperc() : cbilldEntity.getCbldSgstperc());	//		cbilldEntity.setCbldSite(GenericAuditContextHolder.getContext().getSite()) ; 	//		cbilldEntity.setCbldTaxableamt(Objects.nonNull(cbilldRequestBean.getTaxableamt()) ? cbilldRequestBean.getTaxableamt() : cbilldEntity.getCbldTaxableamt());	//		cbilldEntity.setCbldToday(LocalDateTime.now()) ; 	//		cbilldEntity.setCbldUgstamt(Objects.nonNull(cbilldRequestBean.getUgstamt()) ? cbilldRequestBean.getUgstamt() : cbilldEntity.getCbldUgstamt());	//		cbilldEntity.setCbldUgstperc(Objects.nonNull(cbilldRequestBean.getUgstperc()) ? cbilldRequestBean.getUgstperc() : cbilldEntity.getCbldUgstperc());	//		cbilldEntity.setCbldUom(Objects.nonNull(cbilldRequestBean.getUom()) ? cbilldRequestBean.getUom().trim() : cbilldEntity.getCbldUom());	//		cbilldEntity.setCbldUserid(GenericAuditContextHolder.getContext().getUserid()) ; 	//		cbilldEntity.setCbldWorkorderlineno(Objects.nonNull(cbilldRequestBean.getWorkorderlineno()) ? cbilldRequestBean.getWorkorderlineno() : cbilldEntity.getCbldWorkorderlineno());	//		cbilldEntity.setCbldWorkorderno(Objects.nonNull(cbilldRequestBean.getWorkorderno()) ? cbilldRequestBean.getWorkorderno().trim() : cbilldEntity.getCbldWorkorderno());	//	//	//		return cbilldEntity;	//	};}
